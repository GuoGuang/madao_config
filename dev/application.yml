spring:
  servlet:
    # 设置上传文件大小
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  # 如果没有aliyun oss 打开这个配置
  #  autoconfigure:
  #    exclude: cn.javaer.aliyun.spring.boot.autoconfigure.oss.OssAutoConfiguration
  elasticsearch:
    uris: 82.156.148.211:9200
  jpa:
    database: MYSQL
    show-sql: true
    open-in-view: true
    hibernate:
      #  ddl-auto: none # 关闭每次启动自动删除表数据
      ddl-auto: update
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      # 禁用Session Metrics打印
      hibernate.generate_statistics: false
      # 运行程序会校验数据与数据库的字段类型是否相同，不同会报错。
      # hibernate.hbm2ddl.auto: validate

  # 访问：http://localhost:port/domain/druid/login.html 进行登录访问。
  datasource: # Druid连接池的配置信息
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://82.156.148.211:3306/madaoo?characterEncoding=utf-8&allowPublicKeyRetrieval=true&useSSL=false
    type: com.alibaba.druid.pool.DruidDataSource
    username: root
    password: '{cipher}AQBU8CpxR6VrfztuDDHbqHURb6REiQywAyKomZaHbj0aAhqRKSqnliEm7mpzeHbqSlFslnVts/gpkdJEmANLImQSt+MXqwV/dEg/t/boJF7SjhOKQnmYL8XjvMK7jRj5mB1SbjVp2GFbStDpd72v2C/EOKd04Y4XqYgoywCvnTcpzAwvaJ1An9P/3tJf//9YiQKjGqPDrQy1qVDZlib0P7leQV2TcnTZfiERmMchO1Ha5h+5EviFSVU9FbVsWoCr5WM83P3rWEUstZYWHzFQp8MFWDEPEza7zY0x1thgPlCghaWw6usMLYDkR1hjCx8R7Y2YOV0dNnRhdbpExYRWv7WDbuBQbyiH5K+hQdViMLBswU9oFYYA+IY1R6Qi6W2cYHA='
    initialSize: 10 # 池启动时创建的连接数量
    maxWait: 60000 # 配置获取连接等待超时的时间
    minIdle: 5 # 在不新建连接的条件下，池中保持空闲的最少连接数
    maxActive: 10 # 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    validationQuery: SELECT 1 FROM DUAL # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用
    filters: stat,wall # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    poolPreparedStatements: true # 打开PSCache，并且指定每个连接上PSCache的大小
    maxPoolPreparedStatementPerConnectionSize: 20 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
    testOnBorrow: false # 取得连接时是否进行有效性验证（即是否还和数据库连通的）
    testWhileIdle: true # 连接空闲时是否进行有效性验证（即是否还和数据库连通的）
    minEvictableIdleTimeMillis: 300000 # 配置一个连接在池中最小生存的时间，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    testOnReturn: false # 返回连接时是否进行有效性验证（即是否还和数据库连通的）

  rabbitmq:
    host: 82.156.205.178
    username: admin
    password: admin
    port: 5672
    virtual-host: /
    publisher-returns: true
  data:
    redis:
      host: 82.156.148.211
      port: 6379
      timeout: 90000
      password: '{cipher}AQBeqMZOvJ5H2pI6qP4CpTdMbC/zH0mMAKJIePUfKhgkTAqbW9iQS2We37ablmlf7nQXaEg7PoOXELaZyZTB64TVOjuuyseAywzHom+InJHbXmCj7PgpwF14+GGJV8K0Ot6wBkl9GgccygjiQwnVPnWAEGn1my14e8zvKW7UyhL1F2agBUBLnMyoVy5p0jhvPmY3USBmWitHk+aevgmwQM+UGdn9qBp1z/3iu4bzFSms7uSrCOo/oR4OROrpLrFgAC6TEmiJ9ZwRCSJv6aTK8iTdK0fnySQZDAejqb4jqkY8BExJj7iWwK7NffxHQUANP2Y1orq3SfAns06tzUQg1XXPPVhgoRMRiZAxnhxOfLcFtkUJmj7G5TfbetYB47rrDQc='

eureka:
  client: #客户端注册进eureka服务列表内
    service-url:
      #defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/,http://eureka7003.com:7003/eureka/
      defaultZone:  http://127.0.0.1:9009/eureka  #单机版
      #defaultZone:  http://192.168.124.8:9009/eureka  #单机版

  instance:
    # 为注册的这个服务起个别名
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    prefer-ip-address: true     #使用ip进行注册
    # 注册中心跳转到swagger接口
    status-page-url-path:  /swagger-ui.html
    # #绑定客户端的ip而不是主机号
    hostname: ${spring.cloud.client.ip-address}   # ${spring.cloud.client.ip-address} 参考https://blog.csdn.net/xichenguan/article/details/76632033
    

# 暂无可用图床，自行对接图床
# 阿里云OSS对象存储，如果没有aliyun oss 注释这个配置
aliyun:
  oss:
    # 确认endpoint里面的请求地址跟bucket是否都一致。 https://mvp.aliyun.com/zhidao/9180
    endpoint: oss-cn-shanghai.aliyuncs.com
    access-key-id: LTAI4GEKJCtEQgJEKthv6RxG
    access-key-secret: '{cipher}AQAEXsD6bb8C5tWsX/gCA//gthigzDy6rMIppbnak2yvD1hCX7WCdD/1MeYjD1iVH4oOWbFEMwiCVN4dmj7Yg4amYxwn+CS5Ac0VOqoi1Xk18hGSywigHiPmJMB6MTjnC14miV1KA9C9jhdQNvcv0FKf+lu0UUxfh8Gzu6crTOA3OMXO9WgnWZ8EQo2NFyhnoybAvG9R02pCBw0pw7v0xc+vV29+CzBQvv4rtwRcz0zofkdTlFQK64t6qebOCmo5MfTIWbmXHfIvWa3uYFx7R6VANdIc7ID9f7D/I8zj7BhzPz03f7puXSQ3xJOM6YAyYz4MmLvCb/y2W0bkRV5woHNmLlJoE67NSk7nalzs0tT3lz8HL5NmtI+2TLHd/N5mWJ/JlnpKYnksxly4Y35fpBM+'

com:
  madao:
    # 秘钥token，例：-----BEGIN PUBLIC KEY-----xxxx-----END PUBLIC KEY----- 取其中的xxxx
    secretKey: '{cipher}AQCIu//x6tKZbpMQWbcbabRWy3GaR6wZY59YVrUF+AHKeTf/a46Z8zjHA+6DF28LJ32lq52RsxZN5R63nJW9h37nbg0aIUOPwUuCrKDl8xS/28GgxL/PxqUzP+aJZkYOjA/HWYRhLKMwnRd7ZYQFfqQAwkSiscRdmQG9u6ccT5i0BQPyZnjqwIdkECXHQRgkqXlYZ5tX5/GzsEGA+bfIc3OtcPppAKyHXP9MvwBGFLMz12q1FUf/lcJOu/61taE4VOfbCvTyI84Jcful/4fOuS1Auf/P9EXkYuq0krYrpTfv3Bw52yGivHuHzTwZKq2zoYf15dsI8F4sTppGaE5ZhqZZWztAahpsE3L/MvL0x25JdUdW7DeCHE7G/yGesWi4f1pmjUExwUtPABnqlykmMU/BtfYnVHeMwMesAMQ2i6bzrJr8EGPMKA964QVEA2AOrM3sZgWLu+zjLQgevr8lRi2gPxAiFi6W2pBWD0d0wu9sEwZnbDdxYBXGQuTZ7X4cMUwaAZ3oD9Uu03H2ChIp9opwMZVArknOtOsdY+jvtdSD3vDxJ2kCBVvVNfPGFG8AMRF4vJceveTIEcWN8pn6aXA0PdnTGrvwBzoxOJNcKjIStfkPJ6Pw2aY5EOTfE6RtPlpl5Vxclbn1UKNio9bh4vWz9g+svEKzPYCk1Fu4b9HFYmc665/x5uHD+0DpaZCgfkJEL7ftCphROgeJBMHY4I7s/5nFVSLmXHUOeE6fhjDlK21To1hmSVJ3altz7Ib8YlukzOEADYRn3xeW580GoNzxahilbOYphbTx+nNUeApECcZahPi0gsEpI8f9O1LPdD+rxJSRR/grUPn5GwChWY7jea3tr8qBaT+HP0IW1TZxGUH4KGBzGoZkD03PFi+B+IU='

### Hystrix 配置，解决Spring Cloud第一次调用失败
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            # 熔断器超时时间，默认：1秒
            timeoutInMilliseconds: 10000
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000
# 使用HTTP了client rpc调用
feign:
  hystrix:
    enabled: true

logging:
  pattern:
    # 控制台日志添加追踪ID
    level: =%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-},%X{parentId:-},%mdc{req.method},%mdc{req.requestURI},%mdc{USER-ID}]'
  level:
    # feign请求打印日志
    com.madao.api: debug
    org.springframework.data.elasticsearch: TRACE
    org.springframework.web.servlet.DispatcherServlet: DEBUG


# 配置分布式跟踪（tracing）
management:
  tracing:
    # 设置跟踪数据的采样概率为1.0，即完全采样
    sampling:
      probability: 1.0
  # 配置度量（metrics）
  metrics:
    distribution:
      # 启用度量数据的百分位数直方图统计信息
      percentiles-histogram:
        # 启用 'greeting' 指标的百分位数直方图统计信息
        greeting: true
        # 启用 'http.server.requests' 指标的百分位数直方图统计信息
        http.server.requests: true
  # 配置管理端点（endpoints）的曝露策略
  endpoints:
    # 配置Web端点的曝露策略
    web:
      exposure:
        # 曝露所有的管理端点给Web请求
        include: "*"
    jmx:
      exposure:
        # 曝露所有端点给JMX
        include: "*"
